{"version":3,"sources":["assets/HrcLogo.svg","assets/abcLogo.svg","components/Header/Header.js","components/Content/EditModal.js","components/Content/AddButton.js","components/Content/DeleteButton.js","components/Content/SearchContent.js","components/Content/View.js","components/Content/Predict.js","components/Row/Row.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","Header","classes","className","Grid","container","spacing","item","xs","src","img2","alt","img1","edit","fontFamily","font","border","borderRadius","color","opacity","marginRight","alignSelf","textTransform","backgroundColor","saveButton","background","modalBackground","EditButton","onEdit","React","useState","open","setOpen","totalOpenAmount","setTotalOpeAmount","notes","setNotes","handleClose","handleClickReset","Array","from","document","querySelectorAll","forEach","input","value","Button","variant","startIcon","onClick","Dialog","PaperProps","style","boxShadow","keepMounted","onClose","aria-labelledby","maxWidth","DialogTitle","id","paddingTop","IconButton","DialogContent","dividers","TextField","onChange","e","target","type","multiline","rows","DialogActions","event","add","marginLeft","txtField","marginBottom","width","AddButton","onAdd","handleClickClose","addData","a","axios","post","headers","params","name_customer","CustomerName","cust_number","CustomerNo","bill_id","InvNo","total_open_amount","TotalAmount","due_in_date","DueInDate","Notes","then","response","console","log","data","alert","setCustomerName","setCustomerNo","setInvNo","setTotalAmount","setDueInDate","box","items","htmlFor","required","justify","deleteButton","del","DeleteButton","onDelete","DialogContentText","searchButton","textAlign","SearchComponent","onSearch","search","setSearch","placeholder","size","InputProps","endAdornment","InputAdornment","viewCorrespondance","ViewCorrespondance","for","paddingLeft","name","Table","TableHead","TableRow","TableCell","TableBody","predict","PredictButton","paperClass","padding","checked","checkRoot","borderBottom","TableContainer","height","scroll","tableBody","position","table","minWidth","StyledTableCell","withStyles","head","body","StyledTableRow","Row","deleted","setDeleted","updated","setUpdated","editData","setCount","pageCount","deleteData","selectedStr","docList","responseData","setResponseData","isNext","setNext","selected","setSelected","searchData","searchId","prev","useEffect","get","catch","error","Paper","direction","alignItems","Predict","View","toString","dataLength","length","next","hasMore","loader","overflow","CircularProgress","scrollableTarget","Checkbox","newSelected","map","n","index","rowId","isItemSelected","indexOf","selectedIndex","concat","slice","handleClick","inputProps","App","Container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a138b0f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/HrcLogo.be21a072.svg\";","export default __webpack_public_path__ + \"static/media/abcLogo.303d1e9d.svg\";","import React from \"react\";\n\nimport \"./Header.css\";\nimport img1 from \"../../assets/HrcLogo.svg\";\nimport img2 from \"../../assets/abcLogo.svg\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <img src={img2} className=\"appLogo\" alt=\"ABC Limited\" />\n        </Grid>\n        <Grid item xs={4}>\n          <img src={img1} className=\"alignCenter\" alt=\"Highradius\" />\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  edit: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal Ubuntu\",\r\n    border: \"1px solid #97A1A9\",\r\n    borderRadius: \"10px\",\r\n    color: \"#97A1A9\",\r\n    opacity: \"1\",\r\n    marginRight: \"1vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  saveButton: {\r\n    background: \"#14AFF1 0% 0% no-repeat padding-box\",\r\n  },\r\n  modalBackground: {\r\n    background: \"#2A3E4C\",\r\n  },\r\n});\r\n\r\nfunction EditButton({onEdit}) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [totalOpenAmount, setTotalOpeAmount] = React.useState();\r\n  const [notes, setNotes] = React.useState();\r\n\r\n\r\n\r\n  const Amount = (e) => {\r\n    setTotalOpeAmount(e.target.value);\r\n  };\r\n\r\n  const Notes = (e) => {\r\n    setNotes(e.target.value);\r\n  };\r\n\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    handleClickReset();\r\n  };\r\n\r\n\r\n  const handleClickReset = () => {\r\n    setTotalOpeAmount();\r\n    setNotes(\"\");\r\n    Array.from(document.querySelectorAll(\"input\")).forEach(\r\n      (input) => (input.value = \"\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.edit}\r\n        //size=\"small\"\r\n        startIcon={<EditIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        {\" \"}\r\n        Edit\r\n      </Button>\r\n\r\n      <Dialog\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#2A3E4C\",\r\n            boxShadow: \"none\",\r\n            color: \"#ffffff\",\r\n            font: \"normal normal normal Ubuntu\",\r\n          },\r\n        }}\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"lg\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Grid container xs={12}>\r\n            <Grid item xs={5} style={{ paddingTop: \"3px\" }}>\r\n              {\"Edit Invoice\"}\r\n            </Grid>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton               \r\n                style={{ color: \"#97A1A9\" }}\r\n                onClick={handleClose}\r\n              >\r\n                <CloseIcon />{\" \"}\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              Invoice Amount\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"name\"\r\n                onChange={Amount}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                //size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              Notes\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"notes\"\r\n                onChange={Notes}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={5}\r\n                //size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Grid container xs={12}>\r\n            <Grid item xs={2}>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                CANCEL\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={5} />\r\n            <Grid item xs={3}>\r\n              <Button onClick={handleClickReset} variant=\"outlined\" color=\"primary\">\r\n                RESET\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n              <Button\r\n                onClick={function(event){ handleClose(); onEdit(totalOpenAmount, notes)}}\r\n                color=\"primary\"\r\n                className={classes.saveButton}\r\n              >\r\n                SAVE\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditButton;\r\n","import React from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  add: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal 20px/24px Ubuntu\",\r\n    border: \"1px solid #14AFF1\",\r\n    borderRadius: \"10px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: \"1\",\r\n    marginRight: \"1vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  /*  box: {\r\n      background: \"#2A3E4C\",\r\n      boxShadow: \"0px 8px 24px #00000029\",\r\n      borderRadius: \"10px 10px 0px 0px\",\r\n      opacity: \"1\",\r\n    }, \r\n  modalBackground: {\r\n    backgroundColor: \"#2A3E4C\",\r\n  },*/\r\n  saveButton: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal Ubuntu\",\r\n    border: \"1px solid #14AFF1\",\r\n    borderRadius: \"10px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: \"1\",\r\n    marginLeft: \"2vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  txtField: {\r\n    marginBottom: \"2vh\",\r\n    border: \"1px solid #356680\",\r\n    borderRadius: \"10px\",\r\n    color: \"#ffffff\",\r\n    width: \"80%\",\r\n  },\r\n});\r\n\r\nfunction AddButton({onAdd}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickClose = () => {\r\n    setOpen(false);\r\n    handleClickReset();\r\n  };\r\n\r\n \r\n\r\n  const checkData = () => {\r\n    if (CustomerName && CustomerNo && InvNo && TotalAmount && DueInDate) {\r\n      addData();\r\n    } else {\r\n      alert(\"All fields are madatory except Notes!\");\r\n    }\r\n  };\r\n\r\n  const addData = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/1806243/addUser\",\r\n        {},\r\n        {\r\n          headers: { \"Content-Type\": \"x-www-form-urlencoded\" },\r\n          params: {\r\n            name_customer: CustomerName,\r\n            cust_number: CustomerNo,\r\n            bill_id: InvNo,\r\n            total_open_amount: TotalAmount,\r\n            due_in_date: DueInDate,\r\n            notes: Notes,\r\n          },\r\n        }\r\n      ).then((response) => {\r\n          console.log(\"Returned data:\", response.data);\r\n          alert('Record added successfully!');\r\n          onAdd();\r\n        })\r\n\r\n      console.log(\"Returned data:\", response);\r\n      handleClickClose();\r\n    } catch (e) {\r\n      console.log(`Axios request failed: ${e}`);\r\n    }\r\n  };\r\n\r\n  /*   const config = {\r\n    headers: { \"content-type\": \"application/x-www-form-urlencoded\" },\r\n  }; */\r\n\r\n  const [CustomerName, setCustomerName] = React.useState();\r\n  const [CustomerNo, setCustomerNo] = React.useState();\r\n  const [InvNo, setInvNo] = React.useState();\r\n  const [TotalAmount, setTotalAmount] = React.useState();\r\n  const [DueInDate, setDueInDate] = React.useState();\r\n  const [Notes, setNotes] = React.useState();\r\n\r\n  // const formData = {\r\n  //     nameCustomer:CustomerName,\r\n  //     custNumber:CustomerNo,\r\n  //     invoiceId:InvNo,\r\n  //     totalOpenAmount:TotalAmount,\r\n  //     dueInDate:DueInDate,\r\n  //     notes:Notes\r\n  // }\r\n\r\n  const CustName = (e) => {\r\n    setCustomerName(e.target.value);\r\n  };\r\n  const CustNo = (e) => {\r\n    setCustomerNo(e.target.value);\r\n  };\r\n  const InvoiceNo = (e) => {\r\n    setInvNo(e.target.value);\r\n  };\r\n  const Amount = (e) => {\r\n    setTotalAmount(e.target.value);\r\n  };\r\n  const DueDate = (e) => {\r\n    setDueInDate(e.target.value);\r\n  };\r\n  const Anote = (e) => {\r\n    setNotes(e.target.value);\r\n  };\r\n\r\n  const handleClickReset = () => {\r\n    setCustomerName(\"\");\r\n    setCustomerNo(\"\");\r\n    setInvNo(\"\");\r\n    setTotalAmount(\"\");\r\n    setDueInDate(\"\");\r\n    setNotes(\"\");\r\n    Array.from(document.querySelectorAll(\"input\")).forEach(\r\n      (input) => (input.value = \"\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.add}\r\n        //size=\"small\"\r\n        startIcon={<AddIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add\r\n      </Button>\r\n\r\n      <Dialog\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#2A3E4C\",\r\n            boxShadow: \"none\",\r\n            color: \"#ffffff\",\r\n            font: \"normal normal normal Ubuntu\",\r\n          },\r\n        }}\r\n        className={classes.box}\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClickClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"md\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Grid container xs={12}>\r\n            <Grid item xs={11} style={{ paddingTop: \"3px\" }}>\r\n              {\"Add Invoice\"}\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton                \r\n                style={{ color: \"#97A1A9\" }}\r\n                onClick={handleClickClose}\r\n              >\r\n                <CloseIcon />{\" \"}\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <form>\r\n            <Grid container xs={12}>\r\n              <Grid container xs={6}>\r\n                <Grid container xs={12}>\r\n                  <Grid items xs={6}>\r\n                    <span htmlFor=\"name_customer\">Customer name</span>\r\n                  </Grid>\r\n                  <Grid items xs={6}>\r\n                    <TextField\r\n                      className={classes.txtField}\r\n                      id=\"name_customer\"\r\n                      required\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      onChange={CustName}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container xs={6}>\r\n                <Grid container xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <span htmlFor=\"due_in_date\">Due Date</span>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      className={classes.txtField}\r\n                      id=\"due_in_date\"\r\n                      required\r\n                      type=\"date\"\r\n                      variant=\"outlined\"\r\n                      onChange={DueDate}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container xs={12}>\r\n              <Grid container xs={6}>\r\n                <Grid container xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <span htmlFor=\"cust_number\">Customer No.</span>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      className={classes.txtField}\r\n                      id=\"cust_number\"\r\n                      required\r\n                      type=\"text\"\r\n                      variant=\"outlined\"\r\n                      onChange={CustNo}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <span htmlFor=\"bill_id\">Invoice No.</span>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      className={classes.txtField}\r\n                      id=\"bill_id\"\r\n                      required\r\n                      variant=\"outlined\"\r\n                      onChange={InvoiceNo}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <span htmlFor=\"total_open_amount\">Invoice Amount</span>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      className={classes.txtField}\r\n                      id=\" total_open_amount\"\r\n                      required\r\n                      variant=\"outlined\"\r\n                      onChange={Amount}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container xs={6}>\r\n                <Grid item xs={6}>\r\n                  <span htmlFor=\"notes\">Notes</span>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    className={classes.txtField}\r\n                    id=\"notes\"\r\n                    multiline\r\n                    rows={5}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    onChange={Anote}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Grid container xs={12} justify=\"space-between\">\r\n            <Grid item xs={2}>\r\n              <Button onClick={handleClickClose} color=\"primary\">\r\n                CANCEL\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Button\r\n                onClick={handleClickReset}\r\n                variant=\"outlined\"\r\n                className={classes.saveButton}\r\n              >\r\n                RESET\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  checkData();\r\n                }}\r\n                className={classes.saveButton}\r\n              >\r\n                SAVE\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid, { GridSpacing } from \"@material-ui/core/Grid\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst useStyles = makeStyles({\r\n  deleteButton: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal 20px/24px Ubuntu\",\r\n    border: \"1px solid #14AFF1\",\r\n    borderRadius: \"10px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: \"1\",\r\n    marginRight: \"1vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  del: {\r\n    background: \"#14AFF1 0% 0% no-repeat padding-box\",\r\n  },\r\n  modalBackground: {\r\n    backgroundColor: \"#2A3E4C\",\r\n  },\r\n});\r\nfunction DeleteButton({onDelete}) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.deleteButton}\r\n        //size=\"small\"\r\n        startIcon={<RemoveIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#2A3E4C\",\r\n            boxShadow: \"none\",\r\n            color: \"#ffffff\",\r\n            font: \"normal normal normal Ubuntu\",\r\n          },\r\n        }}\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"lg\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          <Grid container xs={12}>\r\n            <Grid item xs={5}>\r\n              {\"Delete Record(s)? \"}\r\n            </Grid>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton                \r\n                style={{ color: \"#97A1A9\" }}\r\n                onClick={handleClose}\r\n              >\r\n                <CloseIcon />{\" \"}\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText\r\n            id=\"alert-dialog-slide-description\"\r\n            style={{ color: \"#ffffff\" }}\r\n          >\r\n            You'll lose your record(s) after this section . We can't recover\r\n            them once you decide.<br></br>\r\n            <br></br>\r\n            Are you sure you want to{\" \"}\r\n            <span style={{ color: \"red\" }}>permanently delete </span>them?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={function(event){ handleClose(); onDelete()}}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={classes.del}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst useStyles = makeStyles({\r\n  searchButton: {\r\n    background: \"#283A46\",\r\n    border: \"1px solid #356680\",\r\n    borderRadius: \"10px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: \"1\",\r\n    textAlign: \"left\",\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal Ubuntu\",\r\n    textTransform: \"none\",\r\n    },\r\n});\r\n\r\nconst SearchComponent = ({onSearch}) => \r\n {\r\n\r\n  const classes = useStyles();\r\n  const [search, setSearch] = React.useState(null);\r\n\r\n  const Search = (e) => {\r\n    setSearch(e.target.value);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" className={classes.searchButton} //size=\"small\" endIcon={<SearchIcon/>}>Search by order id</Button> */}\r\n      {/* <TextField  label=\"Search by order id\"  className={classes.searchButton} //size=\"small\" endIcon={<SearchIcon/>} /> */}\r\n\r\n      {/* <Input  type=\"text\" variant=\"outlined\" color=\"primary\"  placeholder=\"Search by order id\" className={classes.searchButton} //size=\"small\" endIcon={<SearchIcon/>} ></Input> */}\r\n      <TextField\r\n        id=\"searchId\"\r\n        className={classes.searchButton}\r\n        variant=\"outlined\"\r\n        placeholder=\"Search by bill id\"\r\n        size=\"small\"\r\n        onChange={Search}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <IconButton onClick={() => onSearch(search)}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchComponent;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  viewCorrespondance: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal 20px/24px Ubuntu\",\r\n    border: \"1px solid #14AFF1\",\r\n    borderRadius: \"10px\",\r\n    color: \"#FFFFFF\",\r\n    opacity: \"1\",\r\n    marginRight: \"1vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n    modalBackground: {\r\n      background: \"#2A3E4C\",\r\n    },\r\n    del: {\r\n      background: \"#14AFF1 0% 0% no-repeat padding-box\",\r\n    },\r\n  },\r\n});\r\nfunction ViewCorrespondance() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className={classes.viewCorrespondance}\r\n        onClick={handleClickOpen}\r\n        //size=\"small\"\r\n      >\r\n        View Correspondance\r\n      </Button>\r\n      <Dialog\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#2A3E4C\",\r\n            boxShadow: \"none\",\r\n            color: \"#97A1A9\",\r\n            font: \"normal normal normal Ubuntu\",\r\n          },\r\n        }}\r\n        className={classes.box}\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClickClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"lg\"\r\n      >\r\n        {/* <Card className={classes.root} ref={ref}> */}\r\n\r\n        {/* <div className={classes.heading} > */}\r\n        <DialogTitle className={classes.modalBackground}>\r\n          <span style={{ color: \"#ffffff\" }}>View Correspondence</span>\r\n          <label for=\"templates\" style={{ paddingLeft: \"53vw\" }}>\r\n            View :{\" \"}\r\n          </label>\r\n          <select name=\"templates\" id=\"templates\">\r\n            <option value=\"Template1\">Template 1</option>\r\n            <option value=\"Template2\">Template 2</option>\r\n          </select>\r\n          {/* <Grid> */}\r\n          <Button\r\n            onClick={handleClickClose}            \r\n            style={{ color: \"#97A1A9\" }}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n          {/* </Grid> */}\r\n        </DialogTitle>\r\n\r\n        {/* </div>\r\n                  <div id=\"template\" class={classes.allBody}     > */}\r\n\r\n        {/*      \r\n                  <div className=\"body\" > */}\r\n        <DialogContent dividers>\r\n          <p>\r\n            Subject:{\" \"}\r\n            <span style={{ color: \"#ffffff\" }}>\r\n              Invoice Details - Account Name\r\n            </span>\r\n          </p>\r\n          <br></br>\r\n          <p>Dear Sir/Madam,</p>\r\n          <p> Greetings!</p>\r\n          <br></br>\r\n          This is to remind you that there are one or more open invoices on your\r\n          account. lease provide at your earliest convenience an update on the\r\n          payment details or clarify the reason for the delay. If you have any\r\n          specific issue with the invoice(s), please let us know so that we can\r\n          address it to the correct Department.\r\n          <br />\r\n          <p>Please find the details of the invoices below:</p>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Number</TableCell>\r\n                <TableCell>PO Number</TableCell>\r\n                <TableCell>Order Date</TableCell>\r\n                <TableCell>Due Date</TableCell>\r\n                <TableCell>Currency</TableCell>\r\n                <TableCell>Order Amount</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Order Number</TableCell>\r\n                <TableCell>PO Number</TableCell>\r\n                <TableCell>Order Date</TableCell>\r\n                <TableCell>Due Date</TableCell>\r\n                <TableCell>Currency</TableCell>\r\n                <TableCell>Order Amount</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <br></br>\r\n          <p>\r\n            Total Amount to be paid :{\" \"}\r\n            <span style={{ color: \"#ffffff\" }}>$120.4K</span>\r\n            <br />\r\n            <br />\r\n            In case you have already made a payment for the above items, please\r\n            send us the details to ensure the payment is posted.\r\n            <br />\r\n            Let us know if we can be of any further assistance. Looking forward\r\n            to hearing from you.\r\n            <br />\r\n            Kind Regards,\r\n            <br />\r\n            <span style={{ color: \"#ffffff\" }}>\r\n              [Sender’s First Name][Sender’s Last Name]\r\n            </span>\r\n            <br />\r\n            Phone :{\" \"}\r\n            <span style={{ color: \"#ffffff\" }}>[Sender’s contact number]</span>\r\n            <br />\r\n            Fax : <span style={{ color: \"#ffffff\" }}>[If any]</span>\r\n            <br />\r\n            Email :{\" \"}\r\n            <span style={{ color: \"#ffffff\" }}>[Sender’s Email Address]</span>\r\n            <br />\r\n            <span style={{ color: \"#ffffff\" }}>\r\n              Company Name[Sender’s Company Name]\r\n            </span>\r\n          </p>\r\n        </DialogContent>\r\n\r\n        {/* </div>\r\n          <div class=\"tablePart\"> */}\r\n\r\n        {/* </div>\r\n          <div class=\"PostTable\"> */}\r\n\r\n        {/* </div>\r\n          </div> */}\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleClickClose}\r\n            variant=\"outlined\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleClickClose}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.del}\r\n          >\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n\r\n        {/* </div> */}\r\n\r\n        {/* </Card> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewCorrespondance;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  predict: {\r\n    fontFamily: \"Ubuntu\",\r\n    font: \"normal normal normal 20px/24px Ubuntu\",\r\n    background: \"#97a1a9 0% 0% noRepeat paddingBox\",\r\n    borderRadius: \"10px\",\r\n    opacity: \"1\",\r\n    marginRight: \"1vw\",\r\n    // fontSize: \"0.95vw\",\r\n    alignSelf: \"center\",\r\n    color: \"#ffffff\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#14AFF1\",\r\n      color: \"white\",\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n});\r\nfunction PredictButton() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Button \r\n        variant=\"contained\" \r\n        className={classes.predict} \r\n        //size=\"small\"\r\n      >\r\n        Predict\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PredictButton;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"./Row.css\";\nimport {\n  Checkbox,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport EditButton from \"../Content/EditModal\";\nimport AddButton from \"../Content/AddButton\";\nimport DeleteButton from \"../Content/DeleteButton\";\nimport SearchComponent from \"../Content/SearchContent\";\nimport ViewCorrespondance from \"../Content/View\";\nimport PredictButton from \"../Content/Predict\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  paperClass: {\n    borderRadius: 10,\n    opacity: 1,\n    padding: \"2vh 1.5vw\",\n    background: \"#273D49CC 0% 0% no-repeat padding-box\",\n  },\n  checked: {},\n  checkRoot: {\n    // color:\"blue\",\n    \"&$checked\": {\n      color: \"#14AFF1\",\n    },\n    padding: \"3px\",\n    borderBottom: \"none\",\n    color: \"#FFFFFF\",\n  },\n  TableContainer: {\n    height: \"510px\",\n    \"&::-webkit-scrollbar\": {\n      width: \"5px\",\n    },\n    \"&::-webkit-scrollbar-track\": {\n      background: \"#273D49CC\",\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n      background: \"#61707B\",\n    },\n    \"&::-webkit-scrollbar-thumb:hover\": {\n      background: \"#ccc\",\n    },\n  },\n  scroll: {\n    // position:\"fixed\",\n    // width:\"3000px\"\n  },\n  tableBody: {\n    position: \"relative\",\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    color: \"#97A1A9\",\n  },\n  body: {\n    color: \"#ffffff\",\n    border: \"0px\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"#283A46\",\n    },\n  },\n}))(TableRow);\n\nconst Row = () => {\n  const classes = useStyles();\n  const [search, setSearch] = React.useState(null);\n  const [deleted, setDeleted] = React.useState(false);\n  const [updated, setUpdated] = React.useState(false);\n\n  const onSearch = (searchId) => {   \n    console.log(\"inside search\");\n    console.log(searchId);\n    setSearch(searchId);\n    setCount(pageCount + 1);\n  };\n\n  const onDelete = () => {\n    console.log(\"inside delete\");\n    console.log(selected);\n    deleteData(selected.toString());\n  };\n\n  const onEdit = (total_open_amount, notes) => {\n    console.log(\"inside edit\");\n    console.log(selected);\n    if(selected && selected[0])\n    {\n      editData(selected[0], total_open_amount, notes);\n    }\n    else\n    {\n      alert(\"Please select a record to edit!\")\n    }   \n  };\n  \n  const onAdd = () => {\n    console.log(\"inside add after update\");\n    setCount(pageCount + 1);\n  };\n\n\n\n  const editData = async (bill_id, total_open_amount, notes) => {\n    console.log(bill_id);\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/1806243/EditUser\",\n        {},\n        {\n          headers: { \"Content-Type\": \"x-www-form-urlencoded\" },\n          params: {\n            bill_id: bill_id,\n            total_open_amount : total_open_amount,\n            notes : notes\n          },\n        }\n      ).then((response) => {\n        console.log(\"Returned data:\", response);\n        \n        if(response.data)\n        {\n          setUpdated(true);\n          alert('Record updated successfully!');\n          setCount(pageCount + 1);\n        }\n        else{\n          alert('Record could not be updated.')\n        }\n          \n      })\n    } catch (e) {\n      console.log(`Axios request failed: ${e}`);\n    }\n  };\n\n  const deleteData = async (selectedStr) => {\n    console.log(selectedStr);\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/1806243/Delete\",\n        {},\n        {\n          headers: { \"Content-Type\": \"x-www-form-urlencoded\" },\n          params: {\n            docList: selectedStr\n          },\n        }\n      ).then((response) => {\n        console.log(\"Returned data:\", response);\n        \n        if(response.data)\n        {\n          setDeleted(true);\n          alert('Records deleted successfully!');\n          setCount(pageCount + 1);\n        }\n        else{\n          alert('Records could not be deleted.')\n        }\n          \n      })\n    } catch (e) {\n      console.log(`Axios request failed: ${e}`);\n    }\n  };\n\n\n\n  const [responseData, setResponseData] = React.useState([]);\n  const [isNext, setNext] = React.useState(false);\n  const [pageCount, setCount] = React.useState(1);\n  const [selected, setSelected] = React.useState([]);\n  \n  const loadMoreData = () => {\n    setCount(pageCount + 10);\n  };\n\n  const searchData = async (searchId) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/1806243/Search\",\n        {},\n        {\n          headers: { \"Content-Type\": \"x-www-form-urlencoded\" },\n          params: {\n            bill_id: searchId\n          },\n        }\n      ).then((response) => {\n        console.log(\"Returned data:\", response);\n        alert('Records searched successfully!');\n        setResponseData((prev) => [...prev, ...response.data]);\n        setNext(false);\n      })\n    } catch (e) {\n      console.log(`Axios request failed: ${e}`);\n    }\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = responseData.map((n) => n.bill_id);\n      setSelected(newSelected);\n      console.log(selected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, bill_id, total_open_amount, notes) => {\n    const selectedIndex = selected.indexOf(bill_id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, bill_id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n    console.log(newSelected);\n  };\n  const isSelected = (rowId) => selected.indexOf(rowId) !== -1;\n  React.useEffect(() => {\n\n    if(!search || search === \"\")\n    {\n      axios\n      .get(`http://localhost:8080/1806243/getUser?page=${pageCount}`)\n      .then((response) => {\n        //filter deleted / updated records\n        if (deleted || updated)\n        {\n          setResponseData([]);\n          setSelected([]);\n        }\n        //\n        setResponseData((prev) => [...prev, ...response.data]);\n        setNext(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n    else\n    {\n      setResponseData([]);\n      searchData(search);\n    }\n  }, [pageCount]);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paperClass}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n            >\n              <PredictButton />\n              <ViewCorrespondance />\n            </Grid>\n          </Grid>\n          <Grid item xs={6}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-end\"\n              alignItems=\"center\"\n            >\n              <AddButton onAdd={onAdd} />\n              <EditButton onEdit={onEdit}/>\n              <DeleteButton onDelete={onDelete}/>\n              <SearchComponent onSearch={onSearch}/>\n            </Grid>\n          </Grid>\n        </Grid>\n\n    <TableContainer id=\"scrollable\" className={classes.TableContainer}>\n      <InfiniteScroll\n        dataLength={responseData.length}\n        next={loadMoreData}\n        hasMore={isNext}\n        loader={\n          <div\n            style={{\n              height: \"80%\",\n              paddingLeft: \"35%\",\n              overflow: \"hidden\",\n            }}\n          >\n            {/* Loading.... */}\n            <CircularProgress />\n          </div>\n        }\n        scrollableTarget=\"scrollable\"\n      >\n        {\n          <div>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell className={classes.root}>\n                    <Checkbox\n                      padding=\"checkbox\"\n                      classes={{ root: classes.checkRoot, checked: classes.checked }}\n                      onChange={handleSelectAllClick}\n                      checked={\n                        responseData.length > 0 &&\n                        selected.length === responseData.length\n                      }\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell>Cust Name</StyledTableCell>\n                  <StyledTableCell>Cust No</StyledTableCell>\n                  <StyledTableCell>BILL ID</StyledTableCell>\n                  <StyledTableCell>Amount</StyledTableCell>\n                  <StyledTableCell>Due Date</StyledTableCell>\n                  <StyledTableCell>Delay</StyledTableCell>\n                  <StyledTableCell>Predicted Aging Bucket</StyledTableCell>\n                  <StyledTableCell>Notes</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody className={classes.tableBody}>\n                {responseData.map((data, index) => {\n                  const isItemSelected = isSelected(data.bill_id);\n                  return (\n                    <>\n                      <StyledTableRow\n                        onClick={(event) =>\n                          handleClick(\n                            event,\n                            data.bill_id,\n                            data.total_open_amount,\n                            data.notes\n                          )\n                        }\n                        // role=\"checkbox\"\n                        // aria-checked={isItemSelected}\n                        key={data.bill_id}\n                        // selected={isItemSelected}\n                      >\n                        <StyledTableCell className={classes.root}>\n                          <Checkbox\n                            padding=\"checkbox\"\n                            classes={{\n                              root: classes.checkRoot,\n                              checked: classes.checked,\n                            }}\n                            checked={isItemSelected}\n                            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                          />\n                        </StyledTableCell>\n                        <StyledTableCell>{data.name_customer}</StyledTableCell>\n                        <StyledTableCell>{data.cust_number}</StyledTableCell>\n                        <StyledTableCell>{data.bill_id}</StyledTableCell>\n                        <StyledTableCell>\n                          {data.total_open_amount}\n                        </StyledTableCell>\n                        <StyledTableCell>{data.due_in_date}</StyledTableCell>\n                        <StyledTableCell>--</StyledTableCell>\n                        <StyledTableCell>--</StyledTableCell>\n                        <StyledTableCell>{data.notes}</StyledTableCell>\n                      </StyledTableRow>\n                    </>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </div>\n        }\n      </InfiniteScroll>\n    </TableContainer>\n    </Paper>\n    </div>\n  );\n}\n\n\nexport default Row;","import \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport Header from \"./components/Header/Header\";\nimport Row from \"./components/Row/Row\";\n\nfunction App() {\n  return (\n    <div>\n      <Container maxWidth=\"xl\">\n        <Header />\n        <p className='gridHeader'>Invoice List</p>\n        <Row />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}